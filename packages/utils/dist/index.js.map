{"version":3,"sources":["../src/string.ts","../src/object.ts","../src/array.ts","../src/async.ts","../src/validation.ts","../src/crypto.ts","../src/time.ts","../src/environment.ts","../src/cache.ts","../src/error.ts","../src/batch.ts","../src/memory.ts","../src/types.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["export function camelCase(str: string): string {\n  return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase())\n    .replace(/^[A-Z]/, letter => letter.toLowerCase());\n}\n\nexport function snakeCase(str: string): string {\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`)\n    .replace(/^_/, '');\n}\n\nexport function kebabCase(str: string): string {\n  return str.replace(/[A-Z]/g, letter => `-${letter.toLowerCase()}`)\n    .replace(/^-/, '')\n    .replace(/_/g, '-');\n}\n\nexport function truncate(str: string, length: number, suffix = '...'): string {\n  if (str.length <= length) return str;\n  return str.slice(0, length - suffix.length) + suffix;\n}\n\nexport function maskString(str: string, start: number, end: number, mask = '*'): string {\n  if (str.length <= start + end) return str;\n  const startPart = str.slice(0, start);\n  const endPart = str.slice(-end);\n  const maskLength = str.length - start - end;\n  return startPart + mask.repeat(maskLength) + endPart;\n}\n\nexport function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function capitalize(str: string): string {\n  if (!str) return str;\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function pascalCase(str: string): string {\n  return camelCase(str).replace(/^[a-z]/, letter => letter.toUpperCase());\n}\n\nexport function escapeHtml(str: string): string {\n  const escapeMap: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  return str.replace(/[&<>\"']/g, match => escapeMap[match]!);\n}\n\nexport function unescapeHtml(str: string): string {\n  const unescapeMap: Record<string, string> = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n  return str.replace(/&(amp|lt|gt|quot|#39);/g, match => unescapeMap[match]!);\n}","export function deepClone<T>(obj: T): T {\n  if (obj === null || typeof obj !== 'object') return obj;\n  if (obj instanceof Date) return new Date(obj.getTime()) as T;\n  if (obj instanceof Array) return obj.map(item => deepClone(item)) as T;\n  if (obj instanceof RegExp) return new RegExp(obj) as T;\n  \n  if (typeof obj === 'object') {\n    const copy = {} as T;\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        copy[key] = deepClone(obj[key]);\n      }\n    }\n    return copy;\n  }\n  \n  return obj;\n}\n\nexport function deepMerge<T extends Record<string, any>>(target: T, ...sources: Partial<T>[]): T {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  \n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        deepMerge(target[key], source[key]!);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n  \n  return deepMerge(target, ...sources);\n}\n\nexport function getPath(obj: any, path: string, defaultValue?: any): any {\n  const keys = path.split('.');\n  let result = obj;\n  \n  for (const key of keys) {\n    if (result === null || result === undefined) return defaultValue;\n    result = result[key];\n  }\n  \n  return result !== undefined ? result : defaultValue;\n}\n\nexport function setPath(obj: any, path: string, value: any): any {\n  const keys = path.split('.');\n  const lastKey = keys.pop()!;\n  let current = obj;\n  \n  for (const key of keys) {\n    if (current[key] === undefined || current[key] === null) {\n      current[key] = {};\n    }\n    current = current[key];\n  }\n  \n  current[lastKey] = value;\n  return obj;\n}\n\nexport function omit<T extends Record<string, any>, K extends keyof T>(\n  obj: T,\n  keys: (K | string)[]\n): Omit<T, K> {\n  const result = { ...obj };\n  for (const key of keys) {\n    if (typeof key === 'string' && key.includes('.')) {\n      deletePath(result, key);\n    } else {\n      delete result[key as K];\n    }\n  }\n  return result;\n}\n\nexport function pick<T extends Record<string, any>, K extends keyof T>(\n  obj: T,\n  keys: (K | string)[]\n): Pick<T, K> {\n  const result = {} as Pick<T, K>;\n  for (const key of keys) {\n    if (typeof key === 'string' && key.includes('.')) {\n      const value = getPath(obj, key);\n      if (value !== undefined) {\n        setPath(result, key, value);\n      }\n    } else if (key in obj) {\n      Reflect.set(result, key, obj[key])\n    }\n  }\n  return result;\n}\n\nexport function isEmpty(value: any): boolean {\n  if (value === null || value === undefined) return true;\n  if (typeof value === 'boolean') return false;\n  if (typeof value === 'number') return false;\n  if (typeof value === 'string') return value.length === 0;\n  if (Array.isArray(value)) return value.length === 0;\n  if (value instanceof Date) return false;\n  if (value instanceof RegExp) return false;\n  if (typeof value === 'object') return Object.keys(value).length === 0;\n  return false;\n}\n\nexport function isEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n  if (a === null || b === null) return a === b;\n  if (a === undefined || b === undefined) return a === b;\n  if (typeof a !== typeof b) return false;\n  \n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) return false;\n    return a.every((item, index) => isEqual(item, b[index]));\n  }\n  \n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime();\n  }\n  \n  if (a instanceof RegExp && b instanceof RegExp) {\n    return a.toString() === b.toString();\n  }\n  \n  if (typeof a === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) return false;\n    return aKeys.every(key => isEqual(a[key], b[key]));\n  }\n  \n  return false;\n}\n\nfunction isObject(item: any): boolean {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\nfunction deletePath(obj: any, path: string): void {\n  const keys = path.split('.');\n  const lastKey = keys.pop()!;\n  let current = obj;\n  \n  for (const key of keys) {\n    if (current[key] === undefined || current[key] === null) return;\n    current = current[key];\n  }\n  \n  delete current[lastKey];\n}","export function chunk<T>(array: T[], size: number): T[][] {\n  if (size <= 0) return [];\n  const result: T[][] = [];\n  for (let i = 0; i < array.length; i += size) {\n    result.push(array.slice(i, i + size));\n  }\n  return result;\n}\n\nexport function flatten<T>(array: (T | T[])[]): T[] {\n  const result: T[] = [];\n  for (const item of array) {\n    if (Array.isArray(item)) {\n      result.push(...flatten(item));\n    } else {\n      result.push(item);\n    }\n  }\n  return result;\n}\n\nexport function uniq<T>(array: T[]): T[] {\n  return Array.from(new Set(array));\n}\n\nexport function uniqBy<T>(array: T[], keyFn: (item: T) => any): T[] {\n  const seen = new Set();\n  return array.filter(item => {\n    const key = keyFn(item);\n    if (seen.has(key)) return false;\n    seen.add(key);\n    return true;\n  });\n}\n\nexport function groupBy<T>(array: T[], key: keyof T | ((item: T) => string | number)): Record<string, T[]> {\n  return array.reduce((groups, item) => {\n    const groupKey = typeof key === 'function' ? key(item) : item[key];\n    const groupName = String(groupKey);\n    if (!groups[groupName]) groups[groupName] = [];\n    groups[groupName].push(item);\n    return groups;\n  }, {} as Record<string, T[]>);\n}\n\nexport function sortBy<T>(array: T[], key: keyof T | ((item: T) => any)): T[] {\n  return [...array].sort((a, b) => {\n    const aVal = typeof key === 'function' ? key(a) : a[key];\n    const bVal = typeof key === 'function' ? key(b) : b[key];\n    \n    if (aVal < bVal) return -1;\n    if (aVal > bVal) return 1;\n    return 0;\n  });\n}\n\nexport function partition<T>(array: T[], predicate: (item: T) => boolean): [T[], T[]] {\n  const truthy: T[] = [];\n  const falsy: T[] = [];\n  \n  for (const item of array) {\n    if (predicate(item)) {\n      truthy.push(item);\n    } else {\n      falsy.push(item);\n    }\n  }\n  \n  return [truthy, falsy];\n}\n\nexport function sample<T>(array: T[]): T | undefined {\n  if (array.length === 0) return undefined;\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nexport function sampleSize<T>(array: T[], size: number): T[] {\n  if (size >= array.length) return shuffle([...array]);\n  const shuffled = shuffle([...array]);\n  return shuffled.slice(0, size);\n}\n\nexport function shuffle<T>(array: T[]): T[] {\n  const result = [...array];\n  for (let i = result.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [result[i], result[j]] = [result[j]!, result[i]!];\n  }\n  return result;\n}\n\nexport function zip<T, U>(array1: T[], array2: U[]): [T, U][] {\n  const length = Math.min(array1.length, array2.length);\n  const result: [T, U][] = [];\n  for (let i = 0; i < length; i++) {\n    result.push([array1[i]!, array2[i]!]);\n  }\n  return result;\n}\n\nexport function zipWith<T, U, R>(\n  array1: T[], \n  array2: U[], \n  fn: (a: T, b: U) => R\n): R[] {\n  const length = Math.min(array1.length, array2.length);\n  const result: R[] = [];\n  for (let i = 0; i < length; i++) {\n    result.push(fn(array1[i]!, array2[i]!));\n  }\n  return result;\n}\n\nexport function intersection<T>(...arrays: T[][]): T[] {\n  if (arrays.length === 0) return [];\n  if (arrays.length === 1) return [...arrays[0]!];\n  \n  return arrays.reduce((acc, array) => \n    acc.filter(item => array.includes(item))\n  );\n}\n\nexport function difference<T>(array: T[], ...others: T[][]): T[] {\n  const otherItems = new Set(others.flat());\n  return array.filter(item => !otherItems.has(item));\n}\n\nexport function union<T>(...arrays: T[][]): T[] {\n  return uniq(arrays.flat());\n}","export function delay(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function timeout<T>(promise: Promise<T>, ms: number): Promise<T> {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => {\n      reject(new Error(`Operation timed out after ${ms}ms`));\n    }, ms);\n\n    promise\n      .then(resolve)\n      .catch(reject)\n      .finally(() => clearTimeout(timer));\n  });\n}\n\nexport interface RetryOptions {\n  maxAttempts: number;\n  delay?: number;\n  backoff?: 'fixed' | 'linear' | 'exponential';\n  shouldRetry?: (error: any, attempt: number) => boolean;\n}\n\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  options: RetryOptions\n): Promise<T> {\n  const { maxAttempts, delay: baseDelay = 1000, backoff = 'fixed', shouldRetry } = options;\n  \n  let lastError: any;\n  \n  for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n    try {\n      return await fn();\n    } catch (error) {\n      lastError = error;\n      \n      if (attempt === maxAttempts) break;\n      if (shouldRetry && !shouldRetry(error, attempt)) break;\n      \n      const delayMs = calculateDelay(baseDelay, attempt, backoff);\n      await delay(delayMs);\n    }\n  }\n  \n  throw lastError;\n}\n\nexport function debounce<T extends (...args: any[]) => any>(\n  fn: T,\n  ms: number\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout;\n  \n  return (...args: Parameters<T>) => {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn(...args), ms);\n  };\n}\n\nexport function throttle<T extends (...args: any[]) => any>(\n  fn: T,\n  ms: number\n): (...args: Parameters<T>) => void {\n  let lastCall = 0;\n  \n  return (...args: Parameters<T>) => {\n    const now = Date.now();\n    if (now - lastCall >= ms) {\n      lastCall = now;\n      fn(...args);\n    }\n  };\n}\n\nexport interface PromiseAllOptions {\n  concurrency?: number;\n}\n\nexport async function promiseAll<T>(\n  promises: (() => Promise<T>)[],\n  options: PromiseAllOptions = {}\n): Promise<T[]> {\n  const { concurrency = Infinity } = options;\n  \n  if (concurrency >= promises.length) {\n    return Promise.all(promises.map(fn => fn()));\n  }\n  \n  const results: T[] = [];\n  const executing: Promise<void>[] = [];\n  \n  for (let i = 0; i < promises.length; i++) {\n    const promise = promises[i]!().then(result => {\n      results[i] = result;\n    });\n    \n    executing.push(promise);\n    \n    if (executing.length >= concurrency) {\n      await Promise.race(executing);\n      const finishedIndex = executing.findIndex(p => \n        Promise.resolve(p).then(() => true, () => true)\n      );\n      if (finishedIndex !== -1) {\n        executing.splice(finishedIndex, 1);\n      }\n    }\n  }\n  \n  await Promise.all(executing);\n  return results;\n}\n\nexport interface SettledResult<T> {\n  status: 'fulfilled' | 'rejected';\n  value?: T;\n  reason?: any;\n}\n\nexport async function promiseAllSettled<T>(\n  promises: Promise<T>[]\n): Promise<SettledResult<T>[]> {\n  return Promise.all(\n    promises.map(async (promise): Promise<SettledResult<T>> => {\n      try {\n        const value = await promise;\n        return { status: 'fulfilled', value };\n      } catch (reason) {\n        return { status: 'rejected', reason };\n      }\n    })\n  );\n}\n\nexport function race<T>(promises: Promise<T>[]): Promise<T> {\n  return Promise.race(promises);\n}\n\nexport function safeAsync<T>(\n  fn: () => Promise<T>\n): Promise<[Error | null, T | null]> {\n  return fn()\n    .then(result => [null, result] as [null, T])\n    .catch(error => [error, null] as [Error, null]);\n}\n\nexport class AsyncQueue<T> {\n  private queue: (() => Promise<T>)[] = [];\n  private running = 0;\n  private concurrency: number;\n\n  constructor(concurrency = 1) {\n    this.concurrency = concurrency;\n  }\n\n  async add<R>(fn: () => Promise<R>): Promise<R> {\n    return new Promise((resolve, reject) => {\n      this.queue.push(async () => {\n        try {\n          const result = await fn();\n          resolve(result as unknown as R);\n          return result as unknown as T;\n        } catch (error) {\n          reject(error);\n          throw error;\n        }\n      });\n      this.process();\n    });\n  }\n\n  private async process(): Promise<void> {\n    if (this.running >= this.concurrency || this.queue.length === 0) {\n      return;\n    }\n\n    this.running++;\n    const fn = this.queue.shift()!;\n\n    try {\n      await fn();\n    } finally {\n      this.running--;\n      this.process();\n    }\n  }\n}\n\nfunction calculateDelay(baseDelay: number, attempt: number, backoff: string): number {\n  switch (backoff) {\n    case 'linear':\n      return baseDelay * attempt;\n    case 'exponential':\n      return baseDelay * Math.pow(2, attempt - 1);\n    default:\n      return baseDelay;\n  }\n}","export function isValidEmail(email: string): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\n\nexport function isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function isValidUUID(uuid: string): boolean {\n  const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  return uuidRegex.test(uuid);\n}\n\nexport function isValidJSON(str: string): boolean {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function isValidDate(date: string | Date): boolean {\n  const d = new Date(date);\n  return d instanceof Date && !isNaN(d.getTime());\n}\n\nexport function isValidPhoneNumber(phone: string): boolean {\n  const phoneRegex = /^[\\+]?[1-9][\\d]{0,15}$/;\n  const cleanPhone = phone.replace(/[\\s\\-\\(\\)]/g, '');\n  return phoneRegex.test(cleanPhone);\n}\n\nexport interface SchemaField {\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n  required?: boolean;\n  min?: number;\n  max?: number;\n  format?: 'email' | 'url' | 'uuid' | 'date' | 'phone';\n  pattern?: RegExp;\n  enum?: any[];\n  items?: SchemaField;\n  properties?: Record<string, SchemaField>;\n}\n\nexport interface ValidationResult {\n  valid: boolean;\n  errors: string[];\n}\n\nexport function validateSchema(data: any, schema: Record<string, SchemaField>): ValidationResult {\n  const errors: string[] = [];\n  \n  for (const [key, field] of Object.entries(schema)) {\n    const value = data[key];\n    \n    if (field.required && (value === undefined || value === null)) {\n      errors.push(`Field '${key}' is required`);\n      continue;\n    }\n    \n    if (value === undefined || value === null) continue;\n    \n    if (!validateFieldType(value, field.type)) {\n      errors.push(`Field '${key}' must be of type ${field.type}`);\n      continue;\n    }\n    \n    if (field.min !== undefined) {\n      if ((typeof value === 'string' || Array.isArray(value)) && value.length < field.min) {\n        errors.push(`Field '${key}' must have at least ${field.min} characters/items`);\n      } else if (typeof value === 'number' && value < field.min) {\n        errors.push(`Field '${key}' must be at least ${field.min}`);\n      }\n    }\n    \n    if (field.max !== undefined) {\n      if ((typeof value === 'string' || Array.isArray(value)) && value.length > field.max) {\n        errors.push(`Field '${key}' must have at most ${field.max} characters/items`);\n      } else if (typeof value === 'number' && value > field.max) {\n        errors.push(`Field '${key}' must be at most ${field.max}`);\n      }\n    }\n    \n    if (field.format) {\n      const formatError = validateFormat(value, field.format, key);\n      if (formatError) errors.push(formatError);\n    }\n    \n    if (field.pattern && typeof value === 'string' && !field.pattern.test(value)) {\n      errors.push(`Field '${key}' does not match required pattern`);\n    }\n    \n    if (field.enum && !field.enum.includes(value)) {\n      errors.push(`Field '${key}' must be one of: ${field.enum.join(', ')}`);\n    }\n    \n    if (field.type === 'array' && Array.isArray(value) && field.items) {\n      for (let i = 0; i < value.length; i++) {\n        if (!validateFieldType(value[i], field.items.type)) {\n          errors.push(`Field '${key}[${i}]' must be of type ${field.items.type}`);\n        }\n      }\n    }\n    \n    if (field.type === 'object' && field.properties) {\n      const nestedResult = validateSchema(value, field.properties);\n      errors.push(...nestedResult.errors.map(err => `${key}.${err}`));\n    }\n  }\n  \n  return {\n    valid: errors.length === 0,\n    errors\n  };\n}\n\nexport function sanitizeInput(input: string): string {\n  const htmlEntities: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '/': '&#x2F;'\n  };\n  \n  return input.replace(/[&<>\"'/]/g, match => htmlEntities[match]!);\n}\n\nexport function sanitizeSQL(input: string): string {\n  return input.replace(/['\";\\\\]/g, '\\\\$&');\n}\n\nexport function isValidCreditCard(cardNumber: string): boolean {\n  const cleanNumber = cardNumber.replace(/\\D/g, '');\n  \n  if (cleanNumber.length < 13 || cleanNumber.length > 19) return false;\n  \n  let sum = 0;\n  let shouldDouble = false;\n  \n  for (let i = cleanNumber.length - 1; i >= 0; i--) {\n    let digit = parseInt(cleanNumber[i]!);\n    \n    if (shouldDouble) {\n      digit *= 2;\n      if (digit > 9) {\n        digit -= 9;\n      }\n    }\n    \n    sum += digit;\n    shouldDouble = !shouldDouble;\n  }\n  \n  return sum % 10 === 0;\n}\n\nexport function isValidIPAddress(ip: string): boolean {\n  const ipv4Regex = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  const ipv6Regex = /^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$/;\n  return ipv4Regex.test(ip) || ipv6Regex.test(ip);\n}\n\nfunction validateFieldType(value: any, type: string): boolean {\n  switch (type) {\n    case 'string':\n      return typeof value === 'string';\n    case 'number':\n      return typeof value === 'number' && !isNaN(value);\n    case 'boolean':\n      return typeof value === 'boolean';\n    case 'array':\n      return Array.isArray(value);\n    case 'object':\n      return typeof value === 'object' && value !== null && !Array.isArray(value);\n    default:\n      return false;\n  }\n}\n\nfunction validateFormat(value: any, format: string, fieldName: string): string | null {\n  if (typeof value !== 'string') return null;\n  \n  switch (format) {\n    case 'email':\n      return !isValidEmail(value) ? `Field '${fieldName}' must be a valid email` : null;\n    case 'url':\n      return !isValidUrl(value) ? `Field '${fieldName}' must be a valid URL` : null;\n    case 'uuid':\n      return !isValidUUID(value) ? `Field '${fieldName}' must be a valid UUID` : null;\n    case 'date':\n      return !isValidDate(value) ? `Field '${fieldName}' must be a valid date` : null;\n    case 'phone':\n      return !isValidPhoneNumber(value) ? `Field '${fieldName}' must be a valid phone number` : null;\n    default:\n      return null;\n  }\n}","export function generateUUID(): string {\n  if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  \n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\nexport function generateNonce(length = 16): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  \n  if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    const array = new Uint8Array(length);\n    crypto.getRandomValues(array);\n    for (let i = 0; i < length; i++) {\n      result += chars[array[i]! % chars.length];\n    }\n  } else {\n    for (let i = 0; i < length; i++) {\n      result += chars[Math.floor(Math.random() * chars.length)];\n    }\n  }\n  \n  return result;\n}\n\nexport async function hashString(str: string, algorithm: 'sha1' | 'sha256' | 'sha512' = 'sha256'): Promise<string> {\n  if (typeof crypto !== 'undefined' && crypto.subtle) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(str);\n    const hashBuffer = await crypto.subtle.digest(algorithm.toUpperCase(), data);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  }\n  \n  return simpleHash(str);\n}\n\nexport function encodeBase64(str: string): string {\n  if (typeof btoa !== 'undefined') {\n    return btoa(unescape(encodeURIComponent(str)));\n  }\n  \n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str, 'utf8').toString('base64');\n  }\n  \n  return manualBase64Encode(str);\n}\n\nexport function decodeBase64(encoded: string): string {\n  if (typeof atob !== 'undefined') {\n    return decodeURIComponent(escape(atob(encoded)));\n  }\n  \n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(encoded, 'base64').toString('utf8');\n  }\n  \n  return manualBase64Decode(encoded);\n}\n\nexport function encodeUrl(str: string): string {\n  return encodeURIComponent(str);\n}\n\nexport function decodeUrl(encoded: string): string {\n  return decodeURIComponent(encoded);\n}\n\nexport function generateSecurePassword(\n  length = 12,\n  options: {\n    includeUppercase?: boolean;\n    includeLowercase?: boolean;\n    includeNumbers?: boolean;\n    includeSymbols?: boolean;\n  } = {}\n): string {\n  const {\n    includeUppercase = true,\n    includeLowercase = true,\n    includeNumbers = true,\n    includeSymbols = true\n  } = options;\n  \n  let charset = '';\n  if (includeUppercase) charset += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  if (includeLowercase) charset += 'abcdefghijklmnopqrstuvwxyz';\n  if (includeNumbers) charset += '0123456789';\n  if (includeSymbols) charset += '!@#$%^&*()_+-=[]{}|;:,.<>?';\n  \n  if (!charset) throw new Error('At least one character type must be included');\n  \n  let password = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    password += charset[randomIndex];\n  }\n  \n  return password;\n}\n\nexport function generateSalt(length = 16): string {\n  return generateNonce(length);\n}\n\nexport async function pbkdf2(password: string, salt: string, iterations = 10000): Promise<string> {\n  if (typeof crypto !== 'undefined' && crypto.subtle) {\n    const encoder = new TextEncoder();\n    const keyMaterial = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(password),\n      'PBKDF2',\n      false,\n      ['deriveBits']\n    );\n    \n    const derived = await crypto.subtle.deriveBits(\n      {\n        name: 'PBKDF2',\n        salt: encoder.encode(salt),\n        iterations,\n        hash: 'SHA-256'\n      },\n      keyMaterial,\n      256\n    );\n    \n    const hashArray = Array.from(new Uint8Array(derived));\n    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n  }\n  \n  return simpleHash(password + salt);\n}\n\nfunction simpleHash(str: string): string {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash;\n  }\n  return Math.abs(hash).toString(16);\n}\n\nfunction manualBase64Encode(str: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  let result = '';\n  let i = 0;\n  \n  while (i < str.length) {\n    const a = str.charCodeAt(i++);\n    const b = i < str.length ? str.charCodeAt(i++) : 0;\n    const c = i < str.length ? str.charCodeAt(i++) : 0;\n    \n    const bitmap = (a << 16) | (b << 8) | c;\n    \n    result += chars.charAt((bitmap >> 18) & 63);\n    result += chars.charAt((bitmap >> 12) & 63);\n    result += i - 2 < str.length ? chars.charAt((bitmap >> 6) & 63) : '=';\n    result += i - 1 < str.length ? chars.charAt(bitmap & 63) : '=';\n  }\n  \n  return result;\n}\n\nfunction manualBase64Decode(encoded: string): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  let result = '';\n  let i = 0;\n  \n  while (i < encoded.length) {\n    const a = chars.indexOf(encoded.charAt(i++));\n    const b = chars.indexOf(encoded.charAt(i++));\n    const c = chars.indexOf(encoded.charAt(i++));\n    const d = chars.indexOf(encoded.charAt(i++));\n    \n    const bitmap = (a << 18) | (b << 12) | (c << 6) | d;\n    \n    result += String.fromCharCode((bitmap >> 16) & 255);\n    if (c !== 64) result += String.fromCharCode((bitmap >> 8) & 255);\n    if (d !== 64) result += String.fromCharCode(bitmap & 255);\n  }\n  \n  return result;\n}","export interface TimeUnit {\n  years?: number;\n  months?: number;\n  days?: number;\n  hours?: number;\n  minutes?: number;\n  seconds?: number;\n  milliseconds?: number;\n}\n\nexport interface TimeDiff {\n  years: number;\n  months: number;\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  milliseconds: number;\n  totalMilliseconds: number;\n}\n\nexport function formatDate(date: Date, format: string): string {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  const milliseconds = date.getMilliseconds();\n  \n  return format\n    .replace(/yyyy/g, year.toString())\n    .replace(/yy/g, year.toString().slice(-2))\n    .replace(/MM/g, month.toString().padStart(2, '0'))\n    .replace(/M/g, month.toString())\n    .replace(/dd/g, day.toString().padStart(2, '0'))\n    .replace(/d/g, day.toString())\n    .replace(/HH/g, hours.toString().padStart(2, '0'))\n    .replace(/H/g, hours.toString())\n    .replace(/mm/g, minutes.toString().padStart(2, '0'))\n    .replace(/m/g, minutes.toString())\n    .replace(/ss/g, seconds.toString().padStart(2, '0'))\n    .replace(/s/g, seconds.toString())\n    .replace(/SSS/g, milliseconds.toString().padStart(3, '0'));\n}\n\nexport function parseDate(dateString: string, format?: string): Date {\n  if (!format) {\n    return new Date(dateString);\n  }\n  \n  const formatTokens = format.match(/yyyy|yy|MM?|dd?|HH?|mm?|ss?|SSS/g) || [];\n  const dateTokens = dateString.match(/\\d+/g) || [];\n  \n  if (formatTokens.length !== dateTokens.length) {\n    throw new Error('Date string does not match format');\n  }\n  \n  let year = new Date().getFullYear();\n  let month = 0;\n  let day = 1;\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  let milliseconds = 0;\n  \n  formatTokens.forEach((token, index) => {\n    const value = parseInt(dateTokens[index]!);\n    \n    switch (token) {\n      case 'yyyy':\n        year = value;\n        break;\n      case 'yy':\n        year = 2000 + value;\n        break;\n      case 'MM':\n      case 'M':\n        month = value - 1;\n        break;\n      case 'dd':\n      case 'd':\n        day = value;\n        break;\n      case 'HH':\n      case 'H':\n        hours = value;\n        break;\n      case 'mm':\n      case 'm':\n        minutes = value;\n        break;\n      case 'ss':\n      case 's':\n        seconds = value;\n        break;\n      case 'SSS':\n        milliseconds = value;\n        break;\n    }\n  });\n  \n  return new Date(year, month, day, hours, minutes, seconds, milliseconds);\n}\n\nexport function addTime(date: Date, time: TimeUnit): Date {\n  const result = new Date(date);\n  \n  if (time.milliseconds) result.setMilliseconds(result.getMilliseconds() + time.milliseconds);\n  if (time.seconds) result.setSeconds(result.getSeconds() + time.seconds);\n  if (time.minutes) result.setMinutes(result.getMinutes() + time.minutes);\n  if (time.hours) result.setHours(result.getHours() + time.hours);\n  if (time.days) result.setDate(result.getDate() + time.days);\n  if (time.months) result.setMonth(result.getMonth() + time.months);\n  if (time.years) result.setFullYear(result.getFullYear() + time.years);\n  \n  return result;\n}\n\nexport function subtractTime(date: Date, time: TimeUnit): Date {\n  const negativeTime: TimeUnit = {};\n  \n  for (const [key, value] of Object.entries(time)) {\n    if (typeof value === 'number') {\n      negativeTime[key as keyof TimeUnit] = -value;\n    }\n  }\n  \n  return addTime(date, negativeTime);\n}\n\nexport function diffTime(date1: Date, date2: Date): TimeDiff {\n  const totalMilliseconds = Math.abs(date1.getTime() - date2.getTime());\n  \n  let remaining = totalMilliseconds;\n  \n  const years = Math.floor(remaining / (365.25 * 24 * 60 * 60 * 1000));\n  remaining -= years * (365.25 * 24 * 60 * 60 * 1000);\n  \n  const months = Math.floor(remaining / (30.44 * 24 * 60 * 60 * 1000));\n  remaining -= months * (30.44 * 24 * 60 * 60 * 1000);\n  \n  const days = Math.floor(remaining / (24 * 60 * 60 * 1000));\n  remaining -= days * (24 * 60 * 60 * 1000);\n  \n  const hours = Math.floor(remaining / (60 * 60 * 1000));\n  remaining -= hours * (60 * 60 * 1000);\n  \n  const minutes = Math.floor(remaining / (60 * 1000));\n  remaining -= minutes * (60 * 1000);\n  \n  const seconds = Math.floor(remaining / 1000);\n  const milliseconds = remaining % 1000;\n  \n  return {\n    years,\n    months,\n    days,\n    hours,\n    minutes,\n    seconds,\n    milliseconds,\n    totalMilliseconds\n  };\n}\n\nexport function isExpired(timestamp: number | Date, maxAge: number): boolean {\n  const time = timestamp instanceof Date ? timestamp.getTime() : timestamp;\n  return Date.now() - time > maxAge;\n}\n\nexport function getTimezone(): string {\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n\nexport function convertTimezone(date: Date, fromTimezone: string, toTimezone: string): Date {\n  const fromOffset = getTimezoneOffset(date, fromTimezone);\n  const toOffset = getTimezoneOffset(date, toTimezone);\n  const diffOffset = toOffset - fromOffset;\n  \n  return new Date(date.getTime() + diffOffset);\n}\n\nexport function startOfDay(date: Date): Date {\n  const result = new Date(date);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n\nexport function endOfDay(date: Date): Date {\n  const result = new Date(date);\n  result.setHours(23, 59, 59, 999);\n  return result;\n}\n\nexport function startOfWeek(date: Date, weekStartsOn = 0): Date {\n  const result = new Date(date);\n  const day = result.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  result.setDate(result.getDate() - diff);\n  return startOfDay(result);\n}\n\nexport function endOfWeek(date: Date, weekStartsOn = 0): Date {\n  const result = startOfWeek(date, weekStartsOn);\n  result.setDate(result.getDate() + 6);\n  return endOfDay(result);\n}\n\nexport function startOfMonth(date: Date): Date {\n  const result = new Date(date);\n  result.setDate(1);\n  return startOfDay(result);\n}\n\nexport function endOfMonth(date: Date): Date {\n  const result = new Date(date);\n  result.setMonth(result.getMonth() + 1, 0);\n  return endOfDay(result);\n}\n\nexport function isLeapYear(year: number): boolean {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nexport function getDaysInMonth(year: number, month: number): number {\n  return new Date(year, month + 1, 0).getDate();\n}\n\nexport function getWeekOfYear(date: Date): number {\n  const startOfYear = new Date(date.getFullYear(), 0, 1);\n  const diffInMs = date.getTime() - startOfYear.getTime();\n  const diffInDays = Math.floor(diffInMs / (24 * 60 * 60 * 1000));\n  return Math.ceil((diffInDays + startOfYear.getDay() + 1) / 7);\n}\n\nexport function formatRelativeTime(date: Date, baseDate = new Date()): string {\n  const diff = diffTime(date, baseDate);\n  const isPast = date < baseDate;\n  \n  const rtf = new Intl.RelativeTimeFormat('en', { numeric: 'auto' });\n  \n  if (diff.years > 0) {\n    return rtf.format(isPast ? -diff.years : diff.years, 'year');\n  } else if (diff.months > 0) {\n    return rtf.format(isPast ? -diff.months : diff.months, 'month');\n  } else if (diff.days > 0) {\n    return rtf.format(isPast ? -diff.days : diff.days, 'day');\n  } else if (diff.hours > 0) {\n    return rtf.format(isPast ? -diff.hours : diff.hours, 'hour');\n  } else if (diff.minutes > 0) {\n    return rtf.format(isPast ? -diff.minutes : diff.minutes, 'minute');\n  } else {\n    return rtf.format(isPast ? -diff.seconds : diff.seconds, 'second');\n  }\n}\n\nfunction getTimezoneOffset(date: Date, timezone: string): number {\n  const utc = date.getTime() + (date.getTimezoneOffset() * 60000);\n  const targetTime = new Date(utc + getTimezoneOffsetMinutes(timezone) * 60000);\n  return targetTime.getTime() - date.getTime();\n}\n\nfunction getTimezoneOffsetMinutes(timezone: string): number {\n  const now = new Date();\n  const utcTime = now.getTime() + (now.getTimezoneOffset() * 60000);\n  const targetTime = new Date(utcTime);\n  \n  try {\n    const formatter = new Intl.DateTimeFormat('en', {\n      timeZone: timezone,\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false\n    });\n    \n    const parts = formatter.formatToParts(targetTime);\n    const localTime = new Date(\n      parseInt(parts.find(p => p.type === 'year')?.value || '0'),\n      parseInt(parts.find(p => p.type === 'month')?.value || '1') - 1,\n      parseInt(parts.find(p => p.type === 'day')?.value || '1'),\n      parseInt(parts.find(p => p.type === 'hour')?.value || '0'),\n      parseInt(parts.find(p => p.type === 'minute')?.value || '0'),\n      parseInt(parts.find(p => p.type === 'second')?.value || '0')\n    );\n    \n    return (localTime.getTime() - utcTime) / 60000;\n  } catch {\n    return 0;\n  }\n}","declare const window: any;\ndeclare const Deno: any;\ndeclare const self: any;\ndeclare const importScripts: any;\ndeclare const navigator: any;\ndeclare const document: any;\ndeclare const Worker: any;\ndeclare const localStorage: any;\ndeclare const sessionStorage: any;\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n}\n\nexport function isNode(): boolean {\n  return typeof process !== 'undefined' && \n         process.versions != null && \n         process.versions.node != null;\n}\n\nexport function isDeno(): boolean {\n  return typeof Deno !== 'undefined';\n}\n\nexport function isWebWorker(): boolean {\n  return typeof self !== 'undefined' && \n         typeof importScripts === 'function' && \n         typeof navigator !== 'undefined';\n}\n\nexport function isWindows(): boolean {\n  if (isBrowser()) {\n    return navigator.platform.indexOf('Win') > -1;\n  }\n  if (isNode()) {\n    return process.platform === 'win32';\n  }\n  return false;\n}\n\nexport function isMac(): boolean {\n  if (isBrowser()) {\n    return navigator.platform.indexOf('Mac') > -1;\n  }\n  if (isNode()) {\n    return process.platform === 'darwin';\n  }\n  return false;\n}\n\nexport function isLinux(): boolean {\n  if (isBrowser()) {\n    return navigator.platform.indexOf('Linux') > -1;\n  }\n  if (isNode()) {\n    return process.platform === 'linux';\n  }\n  return false;\n}\n\nexport function isIOS(): boolean {\n  if (!isBrowser()) return false;\n  return /iPad|iPhone|iPod/.test(navigator.userAgent);\n}\n\nexport function isAndroid(): boolean {\n  if (!isBrowser()) return false;\n  return /Android/.test(navigator.userAgent);\n}\n\nexport function isMobile(): boolean {\n  if (!isBrowser()) return false;\n  return /Mobi|Android/i.test(navigator.userAgent);\n}\n\nexport function isTablet(): boolean {\n  if (!isBrowser()) return false;\n  return /Tablet|iPad/i.test(navigator.userAgent);\n}\n\nexport function isDesktop(): boolean {\n  return !isMobile() && !isTablet();\n}\n\nexport interface Environment {\n  runtime: 'browser' | 'node' | 'deno' | 'webworker' | 'unknown';\n  version?: string;\n  platform: string;\n  arch?: string;\n  userAgent?: string;\n}\n\nexport function getEnvironment(): Environment {\n  if (isBrowser()) {\n    return {\n      runtime: 'browser',\n      platform: navigator.platform,\n      userAgent: navigator.userAgent\n    };\n  }\n  \n  if (isNode()) {\n    return {\n      runtime: 'node',\n      version: process.versions.node,\n      platform: process.platform,\n      arch: process.arch\n    };\n  }\n  \n  if (isDeno()) {\n    return {\n      runtime: 'deno',\n      version: Deno.version.deno,\n      platform: Deno.build.os,\n      arch: Deno.build.arch\n    };\n  }\n  \n  if (isWebWorker()) {\n    return {\n      runtime: 'webworker',\n      platform: navigator.platform,\n      userAgent: navigator.userAgent\n    };\n  }\n  \n  return {\n    runtime: 'unknown',\n    platform: 'unknown'\n  };\n}\n\nexport interface Platform {\n  os: 'windows' | 'macos' | 'linux' | 'ios' | 'android' | 'unknown';\n  arch?: 'x64' | 'x32' | 'arm64' | 'arm' | 'unknown';\n  endianness?: 'BE' | 'LE';\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\nexport function getPlatform(): Platform {\n  let os: Platform['os'] = 'unknown';\n  let arch: Platform['arch'] = 'unknown';\n  \n  if (isWindows()) os = 'windows';\n  else if (isMac()) os = 'macos';\n  else if (isLinux()) os = 'linux';\n  else if (isIOS()) os = 'ios';\n  else if (isAndroid()) os = 'android';\n  \n  if (isNode()) {\n    switch (process.arch) {\n      case 'x64':\n        arch = 'x64';\n        break;\n      case 'ia32':\n        arch = 'x32';\n        break;\n      case 'arm64':\n        arch = 'arm64';\n        break;\n      case 'arm':\n        arch = 'arm';\n        break;\n    }\n  } else if (isBrowser()) {\n    if (navigator.userAgent.includes('x86_64') || navigator.userAgent.includes('x64')) {\n      arch = 'x64';\n    } else if (navigator.userAgent.includes('arm64') || navigator.userAgent.includes('aarch64')) {\n      arch = 'arm64';\n    } else if (navigator.userAgent.includes('arm')) {\n      arch = 'arm';\n    }\n  }\n  \n  return {\n    os,\n    arch,\n    endianness: getEndianness(),\n    isMobile: isMobile(),\n    isTablet: isTablet(),\n    isDesktop: isDesktop()\n  };\n}\n\nexport function getBrowserInfo(): {\n  name: string;\n  version: string;\n  engine: string;\n} | null {\n  if (!isBrowser()) return null;\n  \n  const ua = navigator.userAgent;\n  let name = 'Unknown';\n  let version = 'Unknown';\n  let engine = 'Unknown';\n  \n  if (ua.includes('Chrome') && !ua.includes('Edge')) {\n    name = 'Chrome';\n    const match = ua.match(/Chrome\\/([0-9.]+)/);\n    version = match ? match[1] : 'Unknown';\n    engine = 'Blink';\n  } else if (ua.includes('Firefox')) {\n    name = 'Firefox';\n    const match = ua.match(/Firefox\\/([0-9.]+)/);\n    version = match ? match[1] : 'Unknown';\n    engine = 'Gecko';\n  } else if (ua.includes('Safari') && !ua.includes('Chrome')) {\n    name = 'Safari';\n    const match = ua.match(/Version\\/([0-9.]+)/);\n    version = match ? match[1] : 'Unknown';\n    engine = 'WebKit';\n  } else if (ua.includes('Edge')) {\n    name = 'Edge';\n    const match = ua.match(/Edge\\/([0-9.]+)/);\n    version = match ? match[1] : 'Unknown';\n    engine = 'EdgeHTML';\n  }\n  \n  return { name, version, engine };\n}\n\nexport function getNodeVersion(): string | null {\n  return isNode() ? process.versions.node : null;\n}\n\nexport function getV8Version(): string | null {\n  return isNode() ? process.versions.v8 : null;\n}\n\nexport function supportsWebGL(): boolean {\n  if (!isBrowser()) return false;\n  \n  try {\n    const canvas = document.createElement('canvas');\n    return !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\n  } catch {\n    return false;\n  }\n}\n\nexport function supportsWebGL2(): boolean {\n  if (!isBrowser()) return false;\n  \n  try {\n    const canvas = document.createElement('canvas');\n    return !!canvas.getContext('webgl2');\n  } catch {\n    return false;\n  }\n}\n\nexport function supportsWorkers(): boolean {\n  return typeof Worker !== 'undefined';\n}\n\nexport function supportsServiceWorker(): boolean {\n  return isBrowser() && 'serviceWorker' in navigator;\n}\n\nexport function supportsLocalStorage(): boolean {\n  if (!isBrowser()) return false;\n  \n  try {\n    localStorage.setItem('test', 'test');\n    localStorage.removeItem('test');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport function supportsSessionStorage(): boolean {\n  if (!isBrowser()) return false;\n  \n  try {\n    sessionStorage.setItem('test', 'test');\n    sessionStorage.removeItem('test');\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nfunction getEndianness(): 'BE' | 'LE' {\n  const buffer = new ArrayBuffer(2);\n  new DataView(buffer).setInt16(0, 256, true);\n  return new Int16Array(buffer)[0] === 256 ? 'LE' : 'BE';\n}","export interface CacheOptions<K = any, V = any> {\n  maxSize?: number;\n  ttl?: number;\n  onEvict?: (key: K, value: V) => void;\n}\n\nexport interface CacheEntry<T> {\n  value: T;\n  expiresAt?: number;\n  lastAccessed: number;\n}\n\nexport class LRUCache<K, V> {\n  private cache = new Map<K, CacheEntry<V>>();\n  private accessOrder = new Map<K, number>();\n  private accessCounter = 0;\n  private readonly maxSize: number;\n  private readonly ttl?: number;\n  private readonly onEvict?: (key: K, value: V) => void;\n\n  constructor(options: CacheOptions<K, V> = {}) {\n    this.maxSize = options.maxSize || 100;\n    this.ttl = options.ttl;\n    this.onEvict = options.onEvict;\n  }\n\n  get(key: K): V | undefined {\n    const entry = this.cache.get(key);\n    if (!entry) return undefined;\n\n    if (this.isExpired(entry)) {\n      this.delete(key);\n      return undefined;\n    }\n\n    entry.lastAccessed = Date.now();\n    this.accessOrder.set(key, ++this.accessCounter);\n    return entry.value;\n  }\n\n  set(key: K, value: V): void {\n    const now = Date.now();\n    const expiresAt = this.ttl ? now + this.ttl : undefined;\n\n    if (this.cache.has(key)) {\n      const entry = this.cache.get(key)!;\n      entry.value = value;\n      entry.expiresAt = expiresAt;\n      entry.lastAccessed = now;\n      this.accessOrder.set(key, ++this.accessCounter);\n      return;\n    }\n\n    if (this.cache.size >= this.maxSize) {\n      this.evictLeastRecentlyUsed();\n    }\n\n    this.cache.set(key, {\n      value,\n      expiresAt,\n      lastAccessed: now\n    });\n    this.accessOrder.set(key, ++this.accessCounter);\n  }\n\n  delete(key: K): boolean {\n    const entry = this.cache.get(key);\n    if (entry && this.onEvict) {\n      this.onEvict(key, entry.value);\n    }\n    this.accessOrder.delete(key);\n    return this.cache.delete(key);\n  }\n\n  clear(): void {\n    if (this.onEvict) {\n      for (const [key, entry] of this.cache) {\n        this.onEvict(key, entry.value);\n      }\n    }\n    this.cache.clear();\n    this.accessOrder.clear();\n    this.accessCounter = 0;\n  }\n\n  has(key: K): boolean {\n    const entry = this.cache.get(key);\n    if (!entry) return false;\n    if (this.isExpired(entry)) {\n      this.delete(key);\n      return false;\n    }\n    return true;\n  }\n\n  size(): number {\n    return this.cache.size;\n  }\n\n  keys(): K[] {\n    return Array.from(this.cache.keys());\n  }\n\n  values(): V[] {\n    return Array.from(this.cache.values()).map(entry => entry.value);\n  }\n\n  entries(): [K, V][] {\n    return Array.from(this.cache.entries()).map(([key, entry]) => [key, entry.value]);\n  }\n\n  private isExpired(entry: CacheEntry<V>): boolean {\n    return entry.expiresAt !== undefined && Date.now() > entry.expiresAt;\n  }\n\n  private evictLeastRecentlyUsed(): void {\n    let lruKey: K | undefined;\n    let lruAccess = Infinity;\n\n    for (const [key, accessCount] of this.accessOrder) {\n      if (accessCount < lruAccess) {\n        lruAccess = accessCount;\n        lruKey = key;\n      }\n    }\n\n    if (lruKey !== undefined) {\n      this.delete(lruKey);\n    }\n  }\n}\n\nexport function memoize<T extends (...args: any[]) => any>(\n  fn: T,\n  options: CacheOptions<string, ReturnType<T>> = {}\n): T {\n  const cache = new LRUCache<string, ReturnType<T>>(options);\n\n  return ((...args: Parameters<T>): ReturnType<T> => {\n    const key = JSON.stringify(args);\n    \n    if (cache.has(key)) {\n      return cache.get(key)!;\n    }\n\n    const result = fn(...args);\n    cache.set(key, result);\n    return result;\n  }) as T;\n}\n\nexport function memoizeAsync<T extends (...args: any[]) => Promise<any>>(\n  fn: T,\n  options: CacheOptions<string, ReturnType<T>> = {}\n): T {\n  const cache = new LRUCache<string, ReturnType<T>>(options);\n  const pendingCache = new Map<string, ReturnType<T>>();\n\n  const ret: unknown = ((...args: Parameters<T>): ReturnType<T> => {\n    const key = JSON.stringify(args);\n    \n    if (cache.has(key)) {\n      return Promise.resolve(cache.get(key)!) as ReturnType<T>;\n    }\n\n    if (pendingCache.has(key)) {\n      return pendingCache.get(key)!;\n    }\n\n    const promise = fn(...args).then(\n      (result: Awaited<ReturnType<T>>) => {\n        cache.set(key, Promise.resolve(result) as ReturnType<T>);\n        pendingCache.delete(key);\n        return result;\n      },\n      (error: any) => {\n        pendingCache.delete(key);\n        throw error;\n      }\n    ) as ReturnType<T>;\n\n    pendingCache.set(key, promise);\n    return promise;\n  });\n\n  return ret as T;\n}","export interface ErrorContext {\n  [key: string]: any;\n}\n\nexport class CustomError extends Error {\n  public readonly code: string;\n  public readonly context: ErrorContext;\n  public readonly timestamp: Date;\n  public override readonly cause: Error | undefined;\n\n  constructor(\n    code: string,\n    message: string,\n    context: ErrorContext = {},\n    cause?: Error\n  ) {\n    super(message);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.context = context;\n    this.timestamp = new Date();\n    this.cause = cause;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n      context: this.context,\n      timestamp: this.timestamp.toISOString(),\n      stack: this.stack,\n      cause: this.cause?.message\n    };\n  }\n}\n\nexport function createError(\n  code: string,\n  message: string,\n  context: ErrorContext = {}\n): CustomError {\n  return new CustomError(code, message, context);\n}\n\nexport function wrapError(\n  error: Error,\n  code: string,\n  message: string,\n  context: ErrorContext = {}\n): CustomError {\n  return new CustomError(code, message, context, error);\n}\n\nexport function isErrorType(error: any, type: string): boolean {\n  return error instanceof Error &&\n    (error.name === type ||\n      (error as CustomError).code === type);\n}\n\nexport interface ErrorHandlerOptions {\n  onError?: (error: Error) => void;\n  retries?: number;\n  backoff?: 'fixed' | 'linear' | 'exponential';\n  delay?: number;\n  shouldRetry?: (error: Error, attempt: number) => boolean;\n}\n\nexport class ErrorHandler {\n  private options: Required<ErrorHandlerOptions>;\n\n  constructor(options: ErrorHandlerOptions = {}) {\n    this.options = {\n      onError: options.onError || (() => { }),\n      retries: options.retries || 0,\n      backoff: options.backoff || 'fixed',\n      delay: options.delay || 1000,\n      shouldRetry: options.shouldRetry || (() => true)\n    };\n  }\n\n  wrap<T extends (...args: any[]) => any>(fn: T): T {\n    return ((...args: Parameters<T>) => {\n      return this.execute(() => fn(...args));\n    }) as T;\n  }\n\n  async execute<T>(fn: () => T | Promise<T>): Promise<T> {\n    let lastError: Error;\n\n    for (let attempt = 0; attempt <= this.options.retries; attempt++) {\n      try {\n        return await fn();\n      } catch (error) {\n        lastError = error as Error;\n        this.options.onError(lastError);\n\n        if (attempt === this.options.retries) break;\n        if (!this.options.shouldRetry(lastError, attempt + 1)) break;\n\n        await this.delay(attempt + 1);\n      }\n    }\n\n    throw lastError!;\n  }\n\n  private async delay(attempt: number): Promise<void> {\n    let ms = this.options.delay;\n\n    switch (this.options.backoff) {\n      case 'linear':\n        ms *= attempt;\n        break;\n      case 'exponential':\n        ms *= Math.pow(2, attempt - 1);\n        break;\n    }\n\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n\nexport function safeAsync<T>(\n  fn: () => Promise<T>\n): Promise<[Error | null, T | null]> {\n  return fn()\n    .then(result => [null, result] as [null, T])\n    .catch(error => [error, null] as [Error, null]);\n}\n\nexport function safeSync<T>(fn: () => T): [Error | null, T | null] {\n  try {\n    const result = fn();\n    return [null, result];\n  } catch (error) {\n    return [error as Error, null];\n  }\n}\n\nexport class ErrorCollector {\n  private errors: Error[] = [];\n\n  add(error: Error): void {\n    this.errors.push(error);\n  }\n\n  addAll(errors: Error[]): void {\n    this.errors.push(...errors);\n  }\n\n  hasErrors(): boolean {\n    return this.errors.length > 0;\n  }\n\n  getErrors(): Error[] {\n    return [...this.errors];\n  }\n\n  getFirst(): Error | undefined {\n    return this.errors[0];\n  }\n\n  getLast(): Error | undefined {\n    return this.errors[this.errors.length - 1];\n  }\n\n  clear(): void {\n    this.errors = [];\n  }\n\n  throwIfAny(): void {\n    if (this.hasErrors()) {\n      if (this.errors.length === 1) {\n        throw this.errors[0];\n      } else {\n        throw new AggregateError(this.errors, `${this.errors.length} errors occurred`);\n      }\n    }\n  }\n\n  count(): number {\n    return this.errors.length;\n  }\n}\n\nexport class AggregateError extends Error {\n  public readonly errors: Error[];\n\n  constructor(errors: Error[], message?: string) {\n    super(message || `${errors.length} errors occurred`);\n    this.name = 'AggregateError';\n    this.errors = errors;\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n  toJSON(): object {\n    return {\n      name: this.name,\n      message: this.message,\n      errors: this.errors.map(err => err.message),\n      stack: this.stack\n    };\n  }\n}","export interface BatchOptions {\n  batchSize?: number;\n  concurrency?: number;\n  delay?: number;\n  onProgress?: (processed: number, total: number) => void;\n  onError?: (error: Error, item: any, index: number) => void;\n}\n\nexport async function batchProcess<T, R>(\n  items: T[],\n  processor: (batch: T[]) => Promise<R[]>,\n  options: BatchOptions = {}\n): Promise<R[]> {\n  const {\n    batchSize = 10,\n    concurrency = 1,\n    delay = 0,\n    onProgress,\n    onError\n  } = options;\n\n  const batches: T[][] = [];\n  for (let i = 0; i < items.length; i += batchSize) {\n    batches.push(items.slice(i, i + batchSize));\n  }\n\n  const results: R[] = [];\n  let processed = 0;\n\n  const processBatch = async (batch: T[], batchIndex: number): Promise<R[]> => {\n    try {\n      if (delay > 0 && batchIndex > 0) {\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      const batchResults = await processor(batch);\n      processed += batch.length;\n      \n      if (onProgress) {\n        onProgress(processed, items.length);\n      }\n\n      return batchResults;\n    } catch (error) {\n      if (onError) {\n        batch.forEach((item, index) => {\n          onError(error as Error, item, batchIndex * batchSize + index);\n        });\n      }\n      throw error;\n    }\n  };\n\n  if (concurrency === 1) {\n    for (let i = 0; i < batches.length; i++) {\n      const batchResults = await processBatch(batches[i]!, i);\n      results.push(...batchResults);\n    }\n  } else {\n    const batchPromises: Promise<R[]>[] = [];\n    const semaphore = new Semaphore(concurrency);\n\n    for (let i = 0; i < batches.length; i++) {\n      const batchPromise = semaphore.acquire().then(async (release) => {\n        try {\n          return await processBatch(batches[i]!, i);\n        } finally {\n          release();\n        }\n      });\n      batchPromises.push(batchPromise);\n    }\n\n    const batchResults = await Promise.all(batchPromises);\n    results.push(...batchResults.flat());\n  }\n\n  return results;\n}\n\nexport interface BatcherOptions<T> {\n  maxBatchSize: number;\n  maxWaitTime: number;\n  concurrency?: number;\n  processor: (items: T[]) => Promise<any[]>;\n}\n\nexport class Batcher<T> {\n  private queue: T[] = [];\n  private timer: NodeJS.Timeout | null = null;\n  private processing = false;\n  private readonly options: Required<BatcherOptions<T>>;\n\n  constructor(options: BatcherOptions<T>) {\n    this.options = {\n      concurrency: 1,\n      ...options\n    };\n  }\n\n  add(item: T): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.queue.push(item);\n\n      if (this.queue.length >= this.options.maxBatchSize) {\n        this.flush().then(resolve).catch(reject);\n      } else {\n        if (!this.timer) {\n          this.timer = setTimeout(() => {\n            this.flush().then(resolve).catch(reject);\n          }, this.options.maxWaitTime);\n        }\n      }\n    });\n  }\n\n  async flush(): Promise<void> {\n    if (this.processing || this.queue.length === 0) return;\n\n    this.processing = true;\n    \n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n\n    const itemsToProcess = this.queue.splice(0);\n\n    try {\n      await this.options.processor(itemsToProcess);\n    } finally {\n      this.processing = false;\n    }\n  }\n\n  async close(): Promise<void> {\n    await this.flush();\n  }\n\n  size(): number {\n    return this.queue.length;\n  }\n}\n\nclass Semaphore {\n  private permits: number;\n  private waitQueue: (() => void)[] = [];\n\n  constructor(permits: number) {\n    this.permits = permits;\n  }\n\n  async acquire(): Promise<() => void> {\n    return new Promise((resolve) => {\n      if (this.permits > 0) {\n        this.permits--;\n        resolve(() => this.release());\n      } else {\n        this.waitQueue.push(() => {\n          this.permits--;\n          resolve(() => this.release());\n        });\n      }\n    });\n  }\n\n  private release(): void {\n    this.permits++;\n    if (this.waitQueue.length > 0) {\n      const next = this.waitQueue.shift()!;\n      next();\n    }\n  }\n}\n\nexport interface ChunkProcessorOptions<T, R> {\n  chunkSize: number;\n  processor: (chunk: T[]) => Promise<R>;\n  onChunkComplete?: (result: R, chunkIndex: number) => void;\n  onError?: (error: Error, chunkIndex: number) => void;\n  concurrency?: number;\n}\n\nexport async function processInChunks<T, R>(\n  items: T[],\n  options: ChunkProcessorOptions<T, R>\n): Promise<R[]> {\n  const {\n    chunkSize,\n    processor,\n    onChunkComplete,\n    onError,\n    concurrency = 1\n  } = options;\n\n  const chunks: T[][] = [];\n  for (let i = 0; i < items.length; i += chunkSize) {\n    chunks.push(items.slice(i, i + chunkSize));\n  }\n\n  const processChunk = async (chunk: T[], index: number): Promise<R> => {\n    try {\n      const result = await processor(chunk);\n      if (onChunkComplete) {\n        onChunkComplete(result, index);\n      }\n      return result;\n    } catch (error) {\n      if (onError) {\n        onError(error as Error, index);\n      }\n      throw error;\n    }\n  };\n\n  if (concurrency === 1) {\n    const results: R[] = [];\n    for (let i = 0; i < chunks.length; i++) {\n      const result = await processChunk(chunks[i]!, i);\n      results.push(result);\n    }\n    return results;\n  } else {\n    const semaphore = new Semaphore(concurrency);\n    const promises = chunks.map(async (chunk, index) => {\n      const release = await semaphore.acquire();\n      try {\n        return await processChunk(chunk, index);\n      } finally {\n        release();\n      }\n    });\n\n    return Promise.all(promises);\n  }\n}","export interface ObjectPoolOptions<T> {\n  maxSize?: number;\n  createFn: () => T;\n  resetFn?: (obj: T) => void;\n  validateFn?: (obj: T) => boolean;\n}\n\nexport class ObjectPool<T> {\n  private pool: T[] = [];\n  private readonly maxSize: number;\n  private readonly createFn: () => T;\n  private readonly resetFn?: (obj: T) => void;\n  private readonly validateFn?: (obj: T) => boolean;\n\n  constructor(options: ObjectPoolOptions<T>) {\n    this.maxSize = options.maxSize || 10;\n    this.createFn = options.createFn;\n    this.resetFn = options.resetFn;\n    this.validateFn = options.validateFn;\n  }\n\n  acquire(): T {\n    let obj = this.pool.pop();\n    \n    if (!obj) {\n      obj = this.createFn();\n    } else if (this.validateFn && !this.validateFn(obj)) {\n      obj = this.createFn();\n    }\n    \n    return obj;\n  }\n\n  release(obj: T): void {\n    if (this.pool.length >= this.maxSize) return;\n    \n    if (this.resetFn) {\n      this.resetFn(obj);\n    }\n    \n    if (!this.validateFn || this.validateFn(obj)) {\n      this.pool.push(obj);\n    }\n  }\n\n  size(): number {\n    return this.pool.length;\n  }\n\n  clear(): void {\n    this.pool = [];\n  }\n}\n\nexport function createObjectPool<T>(\n  createFn: () => T,\n  resetFn?: (obj: T) => void,\n  options: Omit<ObjectPoolOptions<T>, 'createFn' | 'resetFn'> = {}\n): ObjectPool<T> {\n  return new ObjectPool({\n    ...options,\n    createFn,\n    resetFn\n  });\n}\n\nexport function createMemoryPool(bufferSize: number, poolSize = 10): ObjectPool<ArrayBuffer> {\n  return createObjectPool(\n    () => new ArrayBuffer(bufferSize),\n    undefined,\n    { maxSize: poolSize }\n  );\n}\n\nexport interface MemoryTracker {\n  getUsage(): MemoryUsage;\n  track<T>(fn: () => T): { result: T; memoryDelta: number };\n  trackAsync<T>(fn: () => Promise<T>): Promise<{ result: T; memoryDelta: number }>;\n}\n\nexport interface MemoryUsage {\n  heapUsed: number;\n  heapTotal: number;\n  external: number;\n  arrayBuffers: number;\n}\n\nexport function trackMemoryUsage(): MemoryTracker {\n  const getMemoryUsage = (): MemoryUsage => {\n    if (typeof process !== 'undefined' && process.memoryUsage) {\n      const usage = process.memoryUsage();\n      return {\n        heapUsed: usage.heapUsed,\n        heapTotal: usage.heapTotal,\n        external: usage.external,\n        arrayBuffers: usage.arrayBuffers || 0\n      };\n    }\n    \n    if (typeof performance !== 'undefined' && 'memory' in performance) {\n      const memory = (performance as any).memory;\n      return {\n        heapUsed: memory.usedJSHeapSize,\n        heapTotal: memory.totalJSHeapSize,\n        external: memory.totalJSHeapSize - memory.usedJSHeapSize,\n        arrayBuffers: 0\n      };\n    }\n    \n    return {\n      heapUsed: 0,\n      heapTotal: 0,\n      external: 0,\n      arrayBuffers: 0\n    };\n  };\n\n  return {\n    getUsage: getMemoryUsage,\n    \n    track<T>(fn: () => T): { result: T; memoryDelta: number } {\n      const beforeMemory = getMemoryUsage();\n      const result = fn();\n      const afterMemory = getMemoryUsage();\n      const memoryDelta = afterMemory.heapUsed - beforeMemory.heapUsed;\n      \n      return { result, memoryDelta };\n    },\n    \n    async trackAsync<T>(fn: () => Promise<T>): Promise<{ result: T; memoryDelta: number }> {\n      const beforeMemory = getMemoryUsage();\n      const result = await fn();\n      const afterMemory = getMemoryUsage();\n      const memoryDelta = afterMemory.heapUsed - beforeMemory.heapUsed;\n      \n      return { result, memoryDelta };\n    }\n  };\n}\n\nexport class MemoryMonitor {\n  private interval: NodeJS.Timeout | null = null;\n  private samples: MemoryUsage[] = [];\n  private maxSamples: number;\n  private onThreshold?: (usage: MemoryUsage) => void;\n  private threshold?: number;\n\n  constructor(\n    maxSamples = 100,\n    options: {\n      threshold?: number;\n      onThreshold?: (usage: MemoryUsage) => void;\n    } = {}\n  ) {\n    this.maxSamples = maxSamples;\n    this.threshold = options.threshold;\n    this.onThreshold = options.onThreshold;\n  }\n\n  start(intervalMs = 1000): void {\n    if (this.interval) return;\n    \n    const tracker = trackMemoryUsage();\n    \n    this.interval = setInterval(() => {\n      const usage = tracker.getUsage();\n      this.samples.push(usage);\n      \n      if (this.samples.length > this.maxSamples) {\n        this.samples.shift();\n      }\n      \n      if (this.threshold && usage.heapUsed > this.threshold && this.onThreshold) {\n        this.onThreshold(usage);\n      }\n    }, intervalMs);\n  }\n\n  stop(): void {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  }\n\n  getSamples(): MemoryUsage[] {\n    return [...this.samples];\n  }\n\n  getLatest(): MemoryUsage | undefined {\n    return this.samples[this.samples.length - 1];\n  }\n\n  getAverage(): MemoryUsage | undefined {\n    if (this.samples.length === 0) return undefined;\n    \n    const totals = this.samples.reduce(\n      (acc, usage) => ({\n        heapUsed: acc.heapUsed + usage.heapUsed,\n        heapTotal: acc.heapTotal + usage.heapTotal,\n        external: acc.external + usage.external,\n        arrayBuffers: acc.arrayBuffers + usage.arrayBuffers\n      }),\n      { heapUsed: 0, heapTotal: 0, external: 0, arrayBuffers: 0 }\n    );\n    \n    const count = this.samples.length;\n    return {\n      heapUsed: Math.round(totals.heapUsed / count),\n      heapTotal: Math.round(totals.heapTotal / count),\n      external: Math.round(totals.external / count),\n      arrayBuffers: Math.round(totals.arrayBuffers / count)\n    };\n  }\n\n  getPeak(): MemoryUsage | undefined {\n    if (this.samples.length === 0) return undefined;\n    \n    return this.samples.reduce((peak, usage) => ({\n      heapUsed: Math.max(peak.heapUsed, usage.heapUsed),\n      heapTotal: Math.max(peak.heapTotal, usage.heapTotal),\n      external: Math.max(peak.external, usage.external),\n      arrayBuffers: Math.max(peak.arrayBuffers, usage.arrayBuffers)\n    }));\n  }\n\n  clear(): void {\n    this.samples = [];\n  }\n}\n\nexport function formatBytes(bytes: number, decimals = 2): string {\n  if (bytes === 0) return '0 Bytes';\n  \n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  \n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  \n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\ndeclare const window: any;\nexport function gc(): void {\n  if (typeof global !== 'undefined' && global.gc) {\n    global.gc();\n  } else if (typeof window !== 'undefined' && (window as any).gc) {\n    (window as any).gc();\n  }\n}\n\nexport function forceGC(): Promise<void> {\n  return new Promise((resolve) => {\n    gc();\n    setTimeout(() => {\n      gc();\n      resolve();\n    }, 100);\n  });\n}","export function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nexport function isBoolean(value: unknown): value is boolean {\n  return typeof value === 'boolean';\n}\n\nexport function isFunction(value: unknown): value is Function {\n  return typeof value === 'function';\n}\n\nexport function isObject(value: unknown): value is object {\n  return value !== null && typeof value === 'object';\n}\n\nexport function isPlainObject(value: unknown): value is Record<string, any> {\n  return isObject(value) && \n         Object.prototype.toString.call(value) === '[object Object]' &&\n         !Array.isArray(value);\n}\n\nexport function isArray(value: unknown): value is any[] {\n  return Array.isArray(value);\n}\n\nexport function isDate(value: unknown): value is Date {\n  return value instanceof Date && !isNaN(value.getTime());\n}\n\nexport function isRegExp(value: unknown): value is RegExp {\n  return value instanceof RegExp;\n}\n\nexport function isError(value: unknown): value is Error {\n  return value instanceof Error;\n}\n\nexport function isPromise(value: unknown): value is Promise<any> {\n  return isObject(value) && isFunction((value as any).then);\n}\n\nexport function isNull(value: unknown): value is null {\n  return value === null;\n}\n\nexport function isUndefined(value: unknown): value is undefined {\n  return value === undefined;\n}\n\nexport function isNil(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\nexport function isDefined<T>(value: T | undefined | null): value is T {\n  return value !== undefined && value !== null;\n}\n\nexport function isArrayOf<T>(\n  value: unknown,\n  guard: (item: unknown) => item is T\n): value is T[] {\n  return isArray(value) && value.every(guard);\n}\n\nexport function isObjectWith<T extends Record<string, any>>(\n  value: unknown,\n  shape: { [K in keyof T]: (val: unknown) => val is T[K] }\n): value is T {\n  if (!isPlainObject(value)) return false;\n  \n  for (const [key, guard] of Object.entries(shape)) {\n    if (!guard((value as any)[key])) return false;\n  }\n  \n  return true;\n}\n\nexport function isOneOf<T extends readonly unknown[]>(\n  value: unknown,\n  options: T\n): value is T[number] {\n  return options.includes(value);\n}\n\nexport function hasProperty<K extends string>(\n  obj: unknown,\n  prop: K\n): obj is Record<K, unknown> {\n  return isObject(obj) && prop in obj;\n}\n\nexport function hasProperties<K extends string>(\n  obj: unknown,\n  props: K[]\n): obj is Record<K, unknown> {\n  if (!isObject(obj)) return false;\n  return props.every(prop => prop in obj);\n}\n\nexport function isInstanceOf<T>(\n  value: unknown,\n  constructor: new (...args: any[]) => T\n): value is T {\n  return value instanceof constructor;\n}\n\nexport function isStringArray(value: unknown): value is string[] {\n  return isArrayOf(value, isString);\n}\n\nexport function isNumberArray(value: unknown): value is number[] {\n  return isArrayOf(value, isNumber);\n}\n\nexport function isBooleanArray(value: unknown): value is boolean[] {\n  return isArrayOf(value, isBoolean);\n}\n\nexport function isEmptyString(value: unknown): value is '' {\n  return value === '';\n}\n\nexport function isNonEmptyString(value: unknown): value is string {\n  return isString(value) && value.length > 0;\n}\n\nexport function isPositiveNumber(value: unknown): value is number {\n  return isNumber(value) && value > 0;\n}\n\nexport function isNonNegativeNumber(value: unknown): value is number {\n  return isNumber(value) && value >= 0;\n}\n\nexport function isInteger(value: unknown): value is number {\n  return isNumber(value) && Number.isInteger(value);\n}\n\nexport function isPositiveInteger(value: unknown): value is number {\n  return isInteger(value) && value > 0;\n}\n\nexport function isArrayLike(value: unknown): value is ArrayLike<any> {\n  return isObject(value) && \n         hasProperty(value, 'length') && \n         isNumber(value.length) && \n         value.length >= 0;\n}\n\nexport function isIterable(value: unknown): value is Iterable<any> {\n  return isObject(value) && Symbol.iterator in value;\n}\n\nexport function isAsyncIterable(value: unknown): value is AsyncIterable<any> {\n  return isObject(value) && Symbol.asyncIterator in value;\n}\n\nexport function isMap(value: unknown): value is Map<any, any> {\n  return value instanceof Map;\n}\n\nexport function isSet(value: unknown): value is Set<any> {\n  return value instanceof Set;\n}\n\nexport function isWeakMap(value: unknown): value is WeakMap<any, any> {\n  return value instanceof WeakMap;\n}\n\nexport function isWeakSet(value: unknown): value is WeakSet<any> {\n  return value instanceof WeakSet;\n}\n\nexport function isArrayBuffer(value: unknown): value is ArrayBuffer {\n  return value instanceof ArrayBuffer;\n}\n\nexport function isTypedArray(value: unknown): value is ArrayBufferView {\n  return ArrayBuffer.isView(value);\n}\n\nexport type Primitive = string | number | boolean | null | undefined;\n\nexport function isPrimitive(value: unknown): value is Primitive {\n  return value === null || \n         value === undefined || \n         typeof value === 'string' || \n         typeof value === 'number' || \n         typeof value === 'boolean';\n}\n\nexport function isSerializable(value: unknown): boolean {\n  if (isPrimitive(value)) return true;\n  if (isArray(value)) return value.every(isSerializable);\n  if (isPlainObject(value)) {\n    return Object.values(value).every(isSerializable);\n  }\n  if (isDate(value)) return true;\n  return false;\n}\n\nexport function assertIsString(value: unknown): asserts value is string {\n  if (!isString(value)) {\n    throw new TypeError(`Expected string, got ${typeof value}`);\n  }\n}\n\nexport function assertIsNumber(value: unknown): asserts value is number {\n  if (!isNumber(value)) {\n    throw new TypeError(`Expected number, got ${typeof value}`);\n  }\n}\n\nexport function assertIsObject(value: unknown): asserts value is object {\n  if (!isObject(value)) {\n    throw new TypeError(`Expected object, got ${typeof value}`);\n  }\n}\n\nexport function assertIsDefined<T>(value: T | undefined | null): asserts value is T {\n  if (!isDefined(value)) {\n    throw new TypeError('Value is null or undefined');\n  }\n}\n\nexport function createGuard<T>(\n  predicate: (value: unknown) => boolean\n): (value: unknown) => value is T {\n  return (value: unknown): value is T => predicate(value);\n}\n\nexport type TypeGuard<T> = (value: unknown) => value is T;\n\nexport function combineGuards<T, U>(\n  guard1: TypeGuard<T>,\n  guard2: TypeGuard<U>\n): TypeGuard<T & U> {\n  return (value: unknown): value is T & U => {\n    return guard1(value) && guard2(value);\n  };\n}","import { isPlainObject, isDefined } from './types.js';\n\nexport interface UtilsConfig {\n  dateFormat?: {\n    default?: string;\n    timezone?: string;\n  };\n  validation?: {\n    strict?: boolean;\n    throwOnError?: boolean;\n  };\n  cache?: {\n    defaultTTL?: number;\n    maxSize?: number;\n  };\n  errorHandling?: {\n    includeStackTrace?: boolean;\n    logErrors?: boolean;\n  };\n  async?: {\n    defaultTimeout?: number;\n    defaultRetries?: number;\n    defaultConcurrency?: number;\n  };\n}\n\nconst defaultConfig: Required<UtilsConfig> = {\n  dateFormat: {\n    default: 'yyyy-MM-dd HH:mm:ss',\n    timezone: 'UTC'\n  },\n  validation: {\n    strict: false,\n    throwOnError: false\n  },\n  cache: {\n    defaultTTL: 300000, // 5 minutes\n    maxSize: 1000\n  },\n  errorHandling: {\n    includeStackTrace: true,\n    logErrors: false\n  },\n  async: {\n    defaultTimeout: 30000, // 30 seconds\n    defaultRetries: 3,\n    defaultConcurrency: 5\n  }\n};\n\nlet currentConfig: Required<UtilsConfig> = { ...defaultConfig };\n\nexport function configureUtils(config: UtilsConfig): void {\n  currentConfig = deepMergeConfig(currentConfig, config);\n}\n\nexport function getConfig(): Required<UtilsConfig> {\n  return { ...currentConfig };\n}\n\nexport function getConfigValue<K extends keyof UtilsConfig>(key: K): Required<UtilsConfig>[K] {\n  return currentConfig[key];\n}\n\nexport function resetConfig(): void {\n  currentConfig = { ...defaultConfig };\n}\n\nfunction deepMergeConfig(\n  target: Required<UtilsConfig>,\n  source: UtilsConfig\n): Required<UtilsConfig> {\n  const result = { ...target };\n  \n  for (const key in source) {\n    const sourceValue = source[key as keyof UtilsConfig];\n    const targetValue = result[key as keyof Required<UtilsConfig>];\n    \n    if (isPlainObject(sourceValue) && isPlainObject(targetValue)) {\n      result[key as keyof Required<UtilsConfig>] = {\n        ...targetValue,\n        ...sourceValue\n      } as any;\n    } else if (isDefined(sourceValue)) {\n      result[key as keyof Required<UtilsConfig>] = sourceValue as any;\n    }\n  }\n  \n  return result;\n}\n\nexport class ConfigManager {\n  private config: Map<string, any> = new Map();\n  private listeners: Map<string, ((value: any) => void)[]> = new Map();\n\n  set<T>(key: string, value: T): void {\n    const oldValue = this.config.get(key);\n    this.config.set(key, value);\n    \n    if (oldValue !== value) {\n      this.notifyListeners(key, value);\n    }\n  }\n\n  get<T>(key: string, defaultValue?: T): T | undefined {\n    return this.config.has(key) ? this.config.get(key) : defaultValue;\n  }\n\n  has(key: string): boolean {\n    return this.config.has(key);\n  }\n\n  delete(key: string): boolean {\n    const deleted = this.config.delete(key);\n    if (deleted) {\n      this.notifyListeners(key, undefined);\n    }\n    return deleted;\n  }\n\n  clear(): void {\n    const keys = Array.from(this.config.keys());\n    this.config.clear();\n    \n    for (const key of keys) {\n      this.notifyListeners(key, undefined);\n    }\n  }\n\n  keys(): string[] {\n    return Array.from(this.config.keys());\n  }\n\n  values(): any[] {\n    return Array.from(this.config.values());\n  }\n\n  entries(): [string, any][] {\n    return Array.from(this.config.entries());\n  }\n\n  size(): number {\n    return this.config.size;\n  }\n\n  subscribe(key: string, listener: (value: any) => void): () => void {\n    if (!this.listeners.has(key)) {\n      this.listeners.set(key, []);\n    }\n    \n    this.listeners.get(key)!.push(listener);\n    \n    return () => {\n      const keyListeners = this.listeners.get(key);\n      if (keyListeners) {\n        const index = keyListeners.indexOf(listener);\n        if (index !== -1) {\n          keyListeners.splice(index, 1);\n        }\n        \n        if (keyListeners.length === 0) {\n          this.listeners.delete(key);\n        }\n      }\n    };\n  }\n\n  merge(config: Record<string, any>): void {\n    for (const [key, value] of Object.entries(config)) {\n      this.set(key, value);\n    }\n  }\n\n  toObject(): Record<string, any> {\n    const result: Record<string, any> = {};\n    for (const [key, value] of this.config.entries()) {\n      result[key] = value;\n    }\n    return result;\n  }\n\n  fromObject(obj: Record<string, any>): void {\n    this.clear();\n    this.merge(obj);\n  }\n\n  clone(): ConfigManager {\n    const clone = new ConfigManager();\n    clone.config = new Map(this.config);\n    return clone;\n  }\n\n  private notifyListeners(key: string, value: any): void {\n    const keyListeners = this.listeners.get(key);\n    if (keyListeners) {\n      for (const listener of keyListeners) {\n        try {\n          listener(value);\n        } catch (error) {\n          console.error(`Error in config listener for key \"${key}\":`, error);\n        }\n      }\n    }\n  }\n}\n\nexport function createConfigManager(initialConfig?: Record<string, any>): ConfigManager {\n  const manager = new ConfigManager();\n  if (initialConfig) {\n    manager.fromObject(initialConfig);\n  }\n  return manager;\n}\n\nexport interface ConfigurationOptions {\n  required?: string[];\n  defaults?: Record<string, any>;\n  validation?: Record<string, (value: any) => boolean>;\n  transform?: Record<string, (value: any) => any>;\n}\n\nexport class Configuration {\n  private manager: ConfigManager;\n  private options: ConfigurationOptions;\n\n  constructor(config: Record<string, any> = {}, options: ConfigurationOptions = {}) {\n    this.manager = new ConfigManager();\n    this.options = options;\n    this.initialize(config);\n  }\n\n  private initialize(config: Record<string, any>): void {\n    const mergedConfig = { ...this.options.defaults, ...config };\n    \n    this.validateRequired(mergedConfig);\n    this.validateValues(mergedConfig);\n    this.transformValues(mergedConfig);\n    \n    this.manager.fromObject(mergedConfig);\n  }\n\n  private validateRequired(config: Record<string, any>): void {\n    if (this.options.required) {\n      for (const key of this.options.required) {\n        if (!(key in config) || config[key] === undefined || config[key] === null) {\n          throw new Error(`Required configuration key \"${key}\" is missing`);\n        }\n      }\n    }\n  }\n\n  private validateValues(config: Record<string, any>): void {\n    if (this.options.validation) {\n      for (const [key, validator] of Object.entries(this.options.validation)) {\n        if (key in config && !validator(config[key])) {\n          throw new Error(`Invalid value for configuration key \"${key}\"`);\n        }\n      }\n    }\n  }\n\n  private transformValues(config: Record<string, any>): void {\n    if (this.options.transform) {\n      for (const [key, transformer] of Object.entries(this.options.transform)) {\n        if (key in config) {\n          config[key] = transformer(config[key]);\n        }\n      }\n    }\n  }\n\n  get<T>(key: string, defaultValue?: T): T | undefined {\n    return this.manager.get(key, defaultValue);\n  }\n\n  set<T>(key: string, value: T): void {\n    if (this.options.validation && this.options.validation[key]) {\n      if (!this.options.validation[key](value)) {\n        throw new Error(`Invalid value for configuration key \"${key}\"`);\n      }\n    }\n\n    let transformedValue = value;\n    if (this.options.transform && this.options.transform[key]) {\n      transformedValue = this.options.transform[key](value);\n    }\n\n    this.manager.set(key, transformedValue);\n  }\n\n  has(key: string): boolean {\n    return this.manager.has(key);\n  }\n\n  subscribe(key: string, listener: (value: any) => void): () => void {\n    return this.manager.subscribe(key, listener);\n  }\n\n  toObject(): Record<string, any> {\n    return this.manager.toObject();\n  }\n}","// String utilities\nexport {\n  camelCase,\n  snakeCase,\n  kebabCase,\n  truncate,\n  maskString,\n  isValidEmail,\n  isValidUrl,\n  capitalize,\n  pascalCase,\n  escapeHtml,\n  unescapeHtml\n} from './string.js';\n\n// Object utilities\nexport {\n  deepClone,\n  deepMerge,\n  getPath,\n  setPath,\n  omit,\n  pick,\n  isEmpty,\n  isEqual\n} from './object.js';\n\n// Array utilities\nexport {\n  chunk,\n  flatten,\n  uniq,\n  uniqBy,\n  groupBy,\n  sortBy,\n  partition,\n  sample,\n  sampleSize,\n  shuffle,\n  zip,\n  zipWith,\n  intersection,\n  difference,\n  union\n} from './array.js';\n\n// Async utilities\nexport {\n  delay,\n  timeout,\n  retry,\n  debounce,\n  throttle,\n  promiseAll,\n  promiseAllSettled,\n  race,\n  safeAsync,\n  AsyncQueue,\n  type RetryOptions,\n  type PromiseAllOptions,\n  type SettledResult\n} from './async.js';\n\n// Validation utilities\nexport {\n  isValidUUID,\n  isValidJSON,\n  isValidDate,\n  isValidPhoneNumber,\n  validateSchema,\n  sanitizeInput,\n  sanitizeSQL,\n  isValidCreditCard,\n  isValidIPAddress,\n  type SchemaField,\n  type ValidationResult\n} from './validation.js';\n\n// Crypto utilities\nexport {\n  generateUUID,\n  generateNonce,\n  hashString,\n  encodeBase64,\n  decodeBase64,\n  encodeUrl,\n  decodeUrl,\n  generateSecurePassword,\n  generateSalt,\n  pbkdf2\n} from './crypto.js';\n\n// Time utilities\nexport {\n  formatDate,\n  parseDate,\n  addTime,\n  subtractTime,\n  diffTime,\n  isExpired,\n  getTimezone,\n  convertTimezone,\n  startOfDay,\n  endOfDay,\n  startOfWeek,\n  endOfWeek,\n  startOfMonth,\n  endOfMonth,\n  isLeapYear,\n  getDaysInMonth,\n  getWeekOfYear,\n  formatRelativeTime,\n  type TimeUnit,\n  type TimeDiff\n} from './time.js';\n\n// Environment detection utilities\nexport {\n  isBrowser,\n  isNode,\n  isDeno,\n  isWebWorker,\n  isWindows,\n  isMac,\n  isLinux,\n  isIOS,\n  isAndroid,\n  isMobile,\n  isTablet,\n  isDesktop,\n  getEnvironment,\n  getPlatform,\n  getBrowserInfo,\n  getNodeVersion,\n  getV8Version,\n  supportsWebGL,\n  supportsWebGL2,\n  supportsWorkers,\n  supportsServiceWorker,\n  supportsLocalStorage,\n  supportsSessionStorage,\n  type Environment,\n  type Platform\n} from './environment.js';\n\n// Cache utilities\nexport {\n  LRUCache,\n  memoize,\n  memoizeAsync,\n  type CacheOptions,\n  type CacheEntry\n} from './cache.js';\n\n// Error handling utilities\nexport {\n  CustomError,\n  createError,\n  wrapError,\n  isErrorType,\n  ErrorHandler,\n  safeSync,\n  ErrorCollector,\n  AggregateError,\n  type ErrorContext,\n  type ErrorHandlerOptions\n} from './error.js';\n\n// Batch processing utilities\nexport {\n  batchProcess,\n  Batcher,\n  processInChunks,\n  type BatchOptions,\n  type BatcherOptions,\n  type ChunkProcessorOptions\n} from './batch.js';\n\n// Memory utilities\nexport {\n  ObjectPool,\n  createObjectPool,\n  createMemoryPool,\n  trackMemoryUsage,\n  MemoryMonitor,\n  formatBytes,\n  gc,\n  forceGC,\n  type ObjectPoolOptions,\n  type MemoryTracker,\n  type MemoryUsage\n} from './memory.js';\n\n// Type guards\nexport {\n  isString,\n  isNumber,\n  isBoolean,\n  isFunction,\n  isObject,\n  isPlainObject,\n  isArray,\n  isDate,\n  isRegExp,\n  isError,\n  isPromise,\n  isNull,\n  isUndefined,\n  isNil,\n  isDefined,\n  isArrayOf,\n  isObjectWith,\n  isOneOf,\n  hasProperty,\n  hasProperties,\n  isInstanceOf,\n  isStringArray,\n  isNumberArray,\n  isBooleanArray,\n  isEmptyString,\n  isNonEmptyString,\n  isPositiveNumber,\n  isNonNegativeNumber,\n  isInteger,\n  isPositiveInteger,\n  isArrayLike,\n  isIterable,\n  isAsyncIterable,\n  isMap,\n  isSet,\n  isWeakMap,\n  isWeakSet,\n  isArrayBuffer,\n  isTypedArray,\n  isPrimitive,\n  isSerializable,\n  assertIsString,\n  assertIsNumber,\n  assertIsObject,\n  assertIsDefined,\n  createGuard,\n  combineGuards,\n  type Primitive,\n  type TypeGuard\n} from './types.js';\n\n// Configuration utilities\nexport {\n  configureUtils,\n  getConfig,\n  getConfigValue,\n  resetConfig,\n  ConfigManager,\n  createConfigManager,\n  Configuration,\n  type UtilsConfig,\n  type ConfigurationOptions\n} from './config.js';\n\n// Advanced utility chains (implementation for createUtilChain from README)\nexport interface UtilChain {\n  use<T>(middleware: (data: T) => T | Promise<T>): UtilChain;\n  execute<T>(data: T): Promise<T>;\n}\n\nexport function createUtilChain(): UtilChain {\n  const middlewares: Array<(data: any) => any | Promise<any>> = [];\n\n  return {\n    use<T>(middleware: (data: T) => T | Promise<T>): UtilChain {\n      middlewares.push(middleware);\n      return this;\n    },\n\n    async execute<T>(data: T): Promise<T> {\n      let result = data;\n      for (const middleware of middlewares) {\n        result = await middleware(result);\n      }\n      return result;\n    }\n  };\n}"],"mappings":"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","names":["isValidEmail","isValidUrl","delay","chunk","isObject"]}